/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  EIP712Verifier,
  EIP712VerifierInterface,
} from "../../contracts/EIP712Verifier";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "expirationTime",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "refUUID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttestTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevokeTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604080518082018252600381526245415360e81b6020808301918252835180850190945260048452630302e31360e41b908401528151902060e08190527f5904f7b1102a1c44462ac9bd4678b1ee7e1e3e825a021c532f5675cbabd2e3ea6101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100ed8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010292505050565b60805160a05160c05160e0516101005161012051610b7a610151600039600061051f0152600061056e01526000610549015260006104a2015260006104cc015260006104f60152610b7a6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a182e38c1161005b578063a182e38c14610102578063b83010d314610115578063ed24911d1461013b578063ffa1ad741461014357600080fd5b806312b11a17146100825780631863f01d146100b75780632d0335ab146100cc575b600080fd5b7ffd4dc6e2693a62bd64d4a19b3cff766012b6aed3bb661a4b20ffcf82364311505b6040519081526020015b60405180910390f35b6100ca6100c536600461096a565b61018c565b005b6100a46100da3660046109b8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100ca6101103660046109da565b610292565b7fbae0931f3a99efd1b97c2f5b6b6e79d16418246b5055d64757e16de5ad11a8ab6100a4565b6100a46103e2565b61017f6040518060400160405280600481526020017f302e31300000000000000000000000000000000000000000000000000000000081525081565b6040516100ae9190610ac2565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020818152604080832080546001810190915581517fbae0931f3a99efd1b97c2f5b6b6e79d16418246b5055d64757e16de5ad11a8ab93810193909352908201889052606082018190529190610217906080015b604051602081830303815290604052805190602001206103f1565b90508573ffffffffffffffffffffffffffffffffffffffff1661023c82878787610460565b73ffffffffffffffffffffffffffffffffffffffff1614610289576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602081905260408082208054600181019091559051909190610362907ffd4dc6e2693a62bd64d4a19b3cff766012b6aed3bb661a4b20ffcf8236431150908e908e908e908e90610301908f908f90610b2e565b60408051918290038220602083019790975273ffffffffffffffffffffffffffffffffffffffff90951694810194909452606084019290925263ffffffff16608083015260a082015260c081019190915260e08101849052610100016101fc565b90508573ffffffffffffffffffffffffffffffffffffffff1661038782878787610460565b73ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050505050565b60006103ec610488565b905090565b600061045a6103fe610488565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610471878787876105bc565b9150915061047e816106d4565b5095945050505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156104ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561051857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156105f357506000905060036106cb565b8460ff16601b1415801561060b57508460ff16601c14155b1561061c57506000905060046106cb565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610670573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166106c4576000600192509250506106cb565b9150600090505b94509492505050565b60008160048111156106e8576106e8610b3e565b036106f05750565b600181600481111561070457610704610b3e565b03610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b600281600481111561078457610784610b3e565b036107eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610767565b60038160048111156107ff576107ff610b3e565b0361088c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610767565b60048160048111156108a0576108a0610b3e565b0361092d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610767565b50565b803573ffffffffffffffffffffffffffffffffffffffff8116811461095457600080fd5b919050565b803560ff8116811461095457600080fd5b600080600080600060a0868803121561098257600080fd5b8535945061099260208701610930565b93506109a060408701610959565b94979396509394606081013594506080013592915050565b6000602082840312156109ca57600080fd5b6109d382610930565b9392505050565b6000806000806000806000806000806101208b8d0312156109fa57600080fd5b610a038b610930565b995060208b0135985060408b013563ffffffff81168114610a2357600080fd5b975060608b0135965060808b013567ffffffffffffffff80821115610a4757600080fd5b818d0191508d601f830112610a5b57600080fd5b813581811115610a6a57600080fd5b8e6020828501011115610a7c57600080fd5b602083019850809750505050610a9460a08c01610930565b9350610aa260c08c01610959565b925060e08b013591506101008b013590509295989b9194979a5092959850565b600060208083528351808285015260005b81811015610aef57858101830151858201604001528201610ad3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c6343000811000a";

type EIP712VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Verifier__factory extends ContractFactory {
  constructor(...args: EIP712VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EIP712Verifier> {
    return super.deploy(overrides || {}) as Promise<EIP712Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EIP712Verifier {
    return super.attach(address) as EIP712Verifier;
  }
  override connect(signer: Signer): EIP712Verifier__factory {
    return super.connect(signer) as EIP712Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712VerifierInterface {
    return new utils.Interface(_abi) as EIP712VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP712Verifier {
    return new Contract(address, _abi, signerOrProvider) as EIP712Verifier;
  }
}
